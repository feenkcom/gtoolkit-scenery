"
Some slides and sceneries for demoing sceneries, planned for Smalltalk Meetup Zurich 2025-05-16.
"
Class {
	#name : #ExploringObjectsScenerySlideshow,
	#superclass : #PrioritySlideshow,
	#category : #'GToolkit-Scenery-Slideshows'
}

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> brainstormingNewInspectorStencilDesignMindmap [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 item4 item5 item6 item7 item8 item9 item10 item11 item12 item13 item14 item15 item16 item17 item18 item19 item20 item21 item22 item23 item24 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Inspector stencils';
					width: 113.6654612223308;
					backgroundColor: (Color
							r: 0.8699902248289345
							g: 0.9755620723362659
							b: 0.9951124144672532
							alpha: 1.0)) asItem.
	item1 position: -1.1666666666666288 @ 344.4854939778646.
	item1 extent: 113.6654612223308 @ 28.0.
	item2 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'Not part of the demo itself but rather notes on what we need to support the demo';
					weight: #bold;
					fontSize: 18;
					width: 232.4092914499479;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item2 position: -58.16666666666663 @ -141.51450602213538.
	item2 extent: 232.4092914499479 @ 79.0.
	item3 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'We need different kinds of stencils for different purposes';
					width: 158.04290262858058;
					backgroundColor: (Color
							r: 1.0
							g: 0.9012707722385142
							b: 0.9012707722385142
							alpha: 1.0)) asItem.
	item3 position: 187.49879455566418 @ 1.4854939778646212.
	item3 extent: 158.04290262858058 @ 64.0.
	item4 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Arbitrary object	';
					width: 102.93202209472656) asItem.
	item4 position: 238.49879455566418 @ 111.48549397786462.
	item4 extent: 102.93202209472656 @ 28.0.
	item5 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Like the current stencil';
					width: 102.93202209472656) asItem.
	item5 position: 466.54169718424475 @ 25.48549397786462.
	item5 extent: 102.93202209472656 @ 46.0.
	item6 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Instantiating from an arbitrary code snippet';
					width: 144.93438212076808) asItem.
	item6 position: 466.54169718424475 @ 111.48549397786462.
	item6 extent: 144.93438212076808 @ 46.0.
	item7 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Slide';
					width: 43.27239481608058) asItem.
	item7 position: 238.49879455566418 @ 320.9854939778646.
	item7 extent: 43.27239481608058 @ 28.0.
	item8 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Example';
					width: 66.9113108317058) asItem.
	item8 position: 238.49879455566418 @ 478.4854939778646.
	item8 extent: 66.9113108317058 @ 28.0.
	item9 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Scenery';
					width: 65.03214009602857) asItem.
	item9 position: 238.49879455566418 @ 614.4854939778646.
	item9 extent: 65.03214009602857 @ 28.0.
	item10 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'From example method';
					width: 169.69166564941406) asItem.
	item10 position: 466.54169718424475 @ 444.4854939778646.
	item10 extent: 169.69166564941406 @ 28.0.
	item11 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Menu';
					width: 50.186152140299555) asItem.
	item11 position: 466.54169718424475 @ 512.4854939778646.
	item11 extent: 50.186152140299555 @ 28.0.
	item12 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'From slide method of same class or another class';
					width: 172.00550842285156) asItem.
	item12 position: 466.54169718424475 @ 265.4854939778646.
	item12 extent: 172.00550842285156 @ 46.0.
	item13 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Must be a Slide subclass';
					width: 147.79082743326808) asItem.
	item13 position: 763.1089731852215 @ 274.4854939778646.
	item13 extent: 147.79082743326808 @ 28.0.
	item14 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Menu';
					width: 62.31210835774732) asItem.
	item14 position: 466.54169718424475 @ 376.4854939778646.
	item14 extent: 62.31210835774732 @ 28.0.
	item15 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Inspect full slideshow';
					width: 142.30966695149755) asItem.
	item15 position: 763.1089731852215 @ 342.4854939778646.
	item15 extent: 142.30966695149755 @ 28.0.
	item16 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Spawn slide in window';
					width: 166.00489902552647) asItem.
	item16 position: 763.1089731852215 @ 410.4854939778646.
	item16 extent: 166.00489902552647 @ 28.0.
	item17 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Menu';
					width: 56.31662495930982) asItem.
	item17 position: 466.54169718424475 @ 197.48549397786462.
	item17 extent: 56.31662495930982 @ 28.0.
	item18 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Can select the view to display';
					width: 102.93202209472656) asItem.
	item18 position: 763.1089731852215 @ 188.48549397786462.
	item18 extent: 102.93202209472656 @ 46.0.
	item19 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Can select view';
					width: 102.93202209472656) asItem.
	item19 position: 763.1089731852215 @ 512.4854939778646.
	item19 extent: 102.93202209472656 @ 28.0.
	item20 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'From scenery method';
					width: 144.92064921061183) asItem.
	item20 position: 466.54169718424475 @ 580.4854939778646.
	item20 extent: 144.92064921061183 @ 28.0.
	item21 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Menu';
					width: 62.709040323893305) asItem.
	item21 position: 466.54169718424475 @ 648.4854939778646.
	item21 extent: 62.709040323893305 @ 28.0.
	item22 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Scripter';
					width: 69.62432352701808) asItem.
	item22 position: 238.49879455566418 @ 725.4854939778646.
	item22 extent: 69.62432352701808 @ 28.0.
	item23 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'A bit tricky because we need to extract the element from the scripter';
					width: 226.5672760009768) asItem.
	item23 position: 466.54169718424475 @ 716.4854939778646.
	item23 extent: 226.5672760009768 @ 46.0.
	item24 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Inspect scenery';
					width: 102.93202209472656) asItem.
	item24 position: 763.1089731852215 @ 648.4854939778646.
	item24 extent: 102.93202209472656 @ 28.0.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item4.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item5.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item6.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item7.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item8.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item9.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item8
		to: item10.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item8
		to: item11.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item7
		to: item12.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item12
		to: item13.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item7
		to: item14.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item14
		to: item15.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item17.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item17
		to: item18.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item11
		to: item19.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item9
		to: item20.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item9
		to: item21.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item22.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item22
		to: item23.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item21
		to: item24.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item14
		to: item16.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item3.
	scenery
		storeStringMethodName: 'ExploringObjectsScenerySlideshow>>#brainstormingNewInspectorStencilDesignMindmap'.
	^ scenery
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> inspectorSceneries [
	<gtExample>
	<return: #GtScenery>
	^ GtSceneryDemoExamples new inspectorSceneries
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> inspectorSceneriesSlide: aSlide [
	<gtSlide>
	<text: '# Various inspector items

This scenery contains various kinds of objects, such as a Ludo game, a demo of modeling discounted prices using examples, a specific view of that example, a slideshow slide, and even the result of a scripted user interaction.

From such an inspector we can produce a new scenery containing a UML diagram generated from the object. For example from the Prices example we can produce a UML diagram of the class of the object and its associated classes.

The scenery is live, so we can navigate to the class definitions. We can also spawn other related classes, or the representation of the package it contains.

The generated source code can eventually be associated with a method, so it can be stored.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #inspectorSceneries
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> keyClassesUMLScenery [
	<gtExample>
	<return: #GtScenery>
	^ GtSceneryExplanationExamples new keyClassesUMLScenery
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> keyClassesUMLScenerySlide: aSlide [
	<gtSlide>
	<text: '# A generated UML diagram

Here we see a more complex UML diagram showing the key classes of the Scenery package itself.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #keyClassesUMLScenery
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> overviewMindmap [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 item4 item5 item6 item7 item8 item9 item10 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Sceneries';
					emphasis: #italic;
					weight: #bold;
					fontSize: 18;
					width: 86.28402709960938;
					backgroundColor: (Color
							r: 0.8699902248289345
							g: 0.9755620723362659
							b: 0.9951124144672532
							alpha: 1.0)) asItem.
	item1 position: 336.0 @ 405.5.
	item1 extent: 86.28402709960938 @ 33.0.
	item2 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'What is a Scenery?';
					width: 121.43330383300781;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item2 position: 492.2840270996094 @ 280.0.
	item2 extent: 121.43330383300781 @ 28.0.
	item3 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'A graph of items and connections';
					width: 102.93202209472656;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item3 position: 683.7173309326172 @ 194.0.
	item3 extent: 102.93202209472656 @ 46.0.
	item4 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Use cases';
					width: 71.42984517415357;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item4 position: 492.2840270996094 @ 536.0.
	item4 extent: 71.42984517415357 @ 28.0.
	item5 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Mind maps';
					width: 76.18031311035156;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item5 position: 683.7173309326172 @ 434.0.
	item5 extent: 76.18031311035156 @ 28.0.
	item6 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Ad hoc diagrams';
					width: 102.93202209472656;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item6 position: 683.7173309326172 @ 502.0.
	item6 extent: 102.93202209472656 @ 28.0.
	item7 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'UML class diagrams';
					width: 133.55702209472656;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item7 position: 683.7173309326172 @ 570.0.
	item7 extent: 133.55702209472656 @ 28.0.
	item8 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Lepiter roadmaps';
					width: 124.00522359212232;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item8 position: 683.7173309326172 @ 638.0.
	item8 extent: 124.00522359212232 @ 28.0.
	item9 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'An unbounded canvas';
					width: 139.3740234375;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item9 position: 683.7173309326172 @ 280.0.
	item9 extent: 139.3740234375 @ 28.0.
	item10 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'A interactive medium for exploring objects';
					width: 137.21887182969397;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item10 position: 683.7173309326172 @ 348.0.
	item10 extent: 137.21887182969397 @ 46.0.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item2.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item3.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item1
		to: item4.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item5.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item6.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item7.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item8.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item9.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item10.
	scenery
		storeStringMethodName: 'ExploringObjectsScenerySlideshow>>#overviewMindmap'.
	^ scenery
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> overviewMindmapSlide: aSlide [
	<gtSlide>
	<text: '# Scenery Mind map

A scenery consists of a canvas containing a graph of items and their connections.
Items can hold any kind of object, which means that sceneries can be used to explore a graph of objects.

The need for sceneries to be interactive was born from the frustration of having to explicitly program any kind of diagram in GT.

Some use cases are: drawing mind maps, like this one, creating ad hoc diagrams, creating class diagrams, and roadmaps.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #overviewMindmap
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> overviewScenery [
	<gtExample>
	<return: #GtScenery>
	^ GtSceneryDemoExamples new overview
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> overviewScenerySlide: aSlide [
	<gtSlide>
	<text: '# Overview of Scenery types

Here we see some examples.

We have an ad hoc diagram, a mind map, a generated and manually tweaked UML diagram, and inspectors on various kinds of objects.

Note that this slide itself is a scenery, containing some text items, and other items that are themselves embedded sceneries.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #overviewScenery
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> packageExploration [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryPackageInspectorStencil new packageName: #'GToolkit-Scenery') asItem.
	item1 position: 129.26531982421875 @ 82.37842814127606.
	item1 extent: 300.0 @ 400.00000000000006.
	scenery
		storeStringMethodName: 'ExploringObjectsScenerySlideshow>>#packageExploration'.
	^ scenery
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> packageExplorationSlide: aSlide [
	<gtSlide>
	<text: '# Package exploration

Finally, from a package we can explore the examples in that package, and navigate between examples and classes, generating an object and class diagram along the way.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #packageExploration
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> reflectionScenery [
	<gtExample>
	<return: #GtScenery>
	^ GtSceneryEditedExamples new reflectionScenery
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> reflectionScenerySlide: aSlide [
	<gtSlide>
	<text: '# A simple diagram

This is probably the simplest case, a simple diagram of text and shapes, illustrating the key concepts of reflection and reification.

We can edit the diagram, freely move items, zoom in or out, and inspect the stencils of items, which are responsible for generating the view.

We can also inspect the scenery itself, and explore views of its items, connections, and the generated code that will recreate the scenery.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #reflectionScenery
]

{ #category : #accessing }
ExploringObjectsScenerySlideshow >> slidePriorities [
	"Override this method in the subclass.
	Instead of manually setting priorities, just list the slides in order here.
	NB: the names can be the same as the method selectors, but need not be."

	<gtExample>
	<return: #Array>
	^ #(
		#titleSlide:
		#overviewMindmapSlide:
		#overviewScenerySlide:
		#reflectionScenerySlide:
		#inspectorSceneriesSlide:
		#keyClassesUMLScenerySlide:
		#packageExplorationSlide:
		#summaryScenarioSlide:
	)
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> slideScenery [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'This scenery is intended to hold some slides ...';
					width: 102.93202209472656) asItem.
	item1 position: -205.6005103225866 @ -284.10514322916663.
	item1 extent: 102.93202209472656 @ 64.0.
	item2 := scenery
			addSceneryItem: (GtScenerySlideStencil new
					exampleMethodName: 'ExploringObjectsScenerySlideshow>>#titleSlide:') asItem.
	item2 position: -145.57039073257334 @ -155.8841825236293.
	item2 extent: 300.00000000000006 @ 200.0.
	item3 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'What do we need this for?';
					width: 92.05888875325525) asItem.
	item3 position: -17.367036784205425 @ -269.18672180175787.
	item3 extent: 92.05888875325525 @ 46.0.
	scenery
		storeStringMethodName: 'ExploringObjectsScenerySlideshow>>#slideScenery'.
	^ scenery
]

{ #category : #scenery }
ExploringObjectsScenerySlideshow >> summaryScenario [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 item4 item5 item6 item7 item8 item9 item10 item11 item12 item13 item14 item15 item16 item17 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'Where to go from here?';
					emphasis: #italic;
					fontSize: 24;
					width: 136.66920332460677;
					backgroundColor: (Color
							r: 1.0
							g: 0.9012707722385142
							b: 1.0
							alpha: 1.0)) asItem.
	item1 position: 274.0 @ 87.0.
	item1 extent: 136.66920332460677 @ 70.0.
	item2 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Directions';
					weight: #bold;
					fontSize: 18;
					width: 97.71196504286775) asItem.
	item2 position: 274.0 @ 352.0.
	item2 extent: 97.71196504286775 @ 33.0.
	item3 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Explanations';
					width: 91.81758974805302;
					backgroundColor: (Color
							r: 0.9912023460410557
							g: 0.9286412512218963
							b: 0.8426197458455523
							alpha: 1.0)) asItem.
	item3 position: 441.71196504286775 @ 184.0.
	item3 extent: 91.81758974805302 @ 28.0.
	item4 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Lepiter roadmaps';
					width: 119.50773898466105;
					backgroundColor: (Color
							r: 0.8699902248289345
							g: 0.9755620723362659
							b: 0.9951124144672532
							alpha: 1.0)) asItem.
	item4 position: 441.71196504286775 @ 261.0.
	item4 extent: 119.50773898466105 @ 28.0.
	item5 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Guided tours through topics';
					width: 179.24775253107555;
					backgroundColor: (Color
							r: 0.8699902248289345
							g: 0.9755620723362659
							b: 0.9951124144672532
							alpha: 1.0)) asItem.
	item5 position: 666.6678666715268 @ 261.0.
	item5 extent: 179.24775253107555 @ 28.0.
	item6 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Linking explanation text items to GUI items within sceneries';
					width: 189.93131849500878;
					backgroundColor: (Color
							r: 0.9912023460410557
							g: 0.9286412512218963
							b: 0.8426197458455523
							alpha: 1.0)) asItem.
	item6 position: 666.6678666715268 @ 175.0.
	item6 extent: 189.93131849500878 @ 46.0.
	item7 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Sceneries as alternatives to notebook pages';
					width: 154.95590162865903;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item7 position: 441.71196504286775 @ 329.0.
	item7 extent: 154.95590162865903 @ 46.0.
	item8 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Nested, 2D layouts';
					width: 127.63266151334074;
					backgroundColor: (Color
							r: 0.873900293255132
							g: 1.0
							b: 0.8347996089931574
							alpha: 1.0)) asItem.
	item8 position: 666.6678666715268 @ 338.0.
	item8 extent: 127.63266151334074 @ 28.0.
	item9 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Your ideas?';
					width: 83.45019611311545;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item9 position: 441.71196504286775 @ 525.0.
	item9 extent: 83.45019611311545 @ 28.0.
	item10 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Structured diffs for versions of sceneries?';
					width: 248.60198974609375;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item10 position: 666.6678666715268 @ 406.0.
	item10 extent: 248.60198974609375 @ 28.0.
	item11 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'External resources';
					width: 116.62400817871094;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item11 position: 666.6678666715268 @ 474.0.
	item11 extent: 116.62400817871094 @ 28.0.
	item12 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Could be any object';
					width: 125.58401489257801;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item12 position: 985.2698564176205 @ 474.0.
	item12 extent: 125.58401489257801 @ 28.0.
	item13 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Low code / no code development';
					width: 203.22802734375;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item13 position: 666.6678666715268 @ 644.0.
	item13 extent: 203.22802734375 @ 28.0.
	item14 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'An arrow could be an action!';
					width: 176.2920379638672;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item14 position: 985.2698564176205 @ 542.0.
	item14 extent: 176.2920379638672 @ 28.0.
	item15 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Click on an arrow and change its behavior';
					width: 252.7880401611328;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item15 position: 985.2698564176205 @ 610.0.
	item15 extent: 252.7880401611328 @ 28.0.
	item16 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Think of VA Smalltalk';
					width: 133.1300048828125;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item16 position: 985.2698564176205 @ 678.0.
	item16 extent: 133.1300048828125 @ 28.0.
	item17 := scenery
			addSceneryItem: (GtSceneryMindMapNodeStencil new
					label: 'Could design test scenarios visually';
					width: 215.84201049804688;
					backgroundColor: (Color
							r: 1.0
							g: 1.0
							b: 0.8504398826979472
							alpha: 1.0)) asItem.
	item17 position: 985.2698564176205 @ 746.0.
	item17 extent: 215.84201049804688 @ 28.0.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item3.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item4.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item4
		to: item5.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item3
		to: item6.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item7.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item7
		to: item8.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item2
		to: item9.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item9
		to: item10.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item9
		to: item11.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item11
		to: item12.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item9
		to: item13.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item13
		to: item14.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item13
		to: item15.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item13
		to: item16.
	scenery
		addConnectionWithStencil: GtSceneryStraightArcStencil new
		from: item13
		to: item17.
	scenery
		storeStringMethodName: 'ExploringObjectsScenerySlideshow>>#summaryScenario'.
	^ scenery
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> summaryScenarioSlide: aSlide [
	<gtSlide>
	<text: '# Summary mindmap

Sceneries are still a work in progress. Some of the things we''d like to see are generated explanations for tools, roadmaps through notebook topics, and sceneries as special kinds of notebook pages.

I''d also be interested if you have ideas for other applications of sceneries or features you''d like to see.'>
	^ aSlide scenery
		setPriority;
		scenery: ExploringObjectsScenerySlideshow >> #summaryScenario
]

{ #category : #slides }
ExploringObjectsScenerySlideshow >> titleSlide: aSlide [
	<gtSlide>
	<text: '# Sceneries — an interactive canvas for exploring objects

Hi. I''m Oscar Nierstrasz.

Today I''d like to show you a prototype that started as a interactive diagram editor, but is turning into a tool for exploring graphs of objects.'>
	^ aSlide titleWithFooters
		setPriority;
		titleWithFormat: (self asTitle: 'Sceneries');
		subtitleWithFormat: (self asSubtitle: '— an interactive canvas for exploring objects');
		newFooterWithFormat: (self asBigText: 'oscar.nierstrasz@feenk.com')
]
