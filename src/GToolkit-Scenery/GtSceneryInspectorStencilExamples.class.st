"
Examples of different kinds of Inspector items
"
Class {
	#name : #GtSceneryInspectorStencilExamples,
	#superclass : #AbstractGtExampleAssertable,
	#category : #'GToolkit-Scenery-Examples'
}

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> compositeScenery [
	<gtExample>
	<return: #GtScenery>
	| scenery restored |
	scenery := GtScenery new.
	#(#ludoGameSceneryBoardView #errorScenery #scripterScenery #memoryExampleScenery #embeddedSceneryExampleScenery #ludoGameScenery #demoSlidesScenery)
		asOrderedCollection do: [ :each | scenery addScenery: (self perform: each) ].
	restored := scenery restored.
	self assert: scenery equals: restored.
	^ restored
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> compositeSceneryEdited [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 item4 item5 item6 item7 item8 item9 item10 item11 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryInspectorStencil new
					viewMethodSelector: #gtPositionsFor:;
					target: [ GtLudoRecordingGame new
							roll: 6;
							moveTokenNamed: 'A';
							roll: 2;
							moveTokenNamed: 'A';
							roll: 6;
							moveTokenNamed: 'b';
							roll: 6;
							moveTokenNamed: 'B';
							roll: 4;
							moveTokenNamed: 'B';
							yourself ]) asItem.
	item1 position: 773 @ -1824.5247395833335.
	item1 extent: 395.3839436998662 @ 437.3745360285734.
	item2 := scenery
			addSceneryItem: (GtSceneryInspectorStencil new target: [ 1 / 0 ]) asItem.
	item2 position: -444 @ -2488.5247395833335.
	item2 extent: 300.0 @ 400.0.
	item3 := scenery addSceneryItem: GtSceneryScripterStencil new asItem.
	item3 position: -39.0 @ -1809.5247395833335.
	item3 extent: 250.0 @ 250.0.
	item4 := scenery
			addSceneryItem: (GtSceneryExampleStencil new
					viewMethodSelector: #gtLiveFor:;
					exampleMethodName: 'GtMemoryGameExamples>>#afterSomeMoves') asItem.
	item4 position: 314.0 @ -1738.6276041666667.
	item4 extent: 351.9303385416665 @ 352.1028645833335.
	item5 := scenery
			addSceneryItem: (GtEmbeddedSceneryStencil new
					exampleMethodName: 'GtSceneryEditedExamples>>#sceneryMindmap') asItem.
	item5 position: 0.0 @ -2261.1458333333335.
	item5 extent: 357.16796875 @ 354.51822916666674.
	item6 := scenery
			addSceneryItem: (GtEmbeddedSceneryStencil new
					exampleMethodName: 'GtSceneryEditedExamples>>#simpleClassDiagram') asItem.
	item6 position: 473.71354166666663 @ -2292.7449747721357.
	item6 extent: 362.12890625 @ 348.57096354166674.
	item7 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'A Scenery with two embedded sceneries as examples.';
					width: 183.29335021972656) asItem.
	item7 position: 250.16536458333246 @ -2351.6421101888022.
	item7 extent: 183.29335021972656 @ 46.0.
	item8 := scenery
			addSceneryItem: (GtSceneryInspectorStencil new
					target: [ GtLudoRecordingGame new
							roll: 6;
							moveTokenNamed: 'A';
							roll: 2;
							moveTokenNamed: 'A';
							roll: 6;
							moveTokenNamed: 'b';
							roll: 6;
							moveTokenNamed: 'B';
							roll: 4;
							moveTokenNamed: 'B';
							yourself ]) asItem.
	item8 position: -540.0 @ -1911.6421101888022.
	item8 extent: 300.0 @ 400.0.
	item9 := scenery addSceneryItem: GtScenerySlideStencil new asItem.
	item9 position: 387.0 @ -2710.9176093207466.
	item9 extent: 300.0 @ 200.0.
	item10 := scenery
			addSceneryItem: (GtScenerySlideStencil new
					exampleMethodName: 'DemoSlideshow>>#scriptedExampleInPager:') asItem.
	item10 position: 803.2737630208335 @ -2623.6421101888022.
	item10 extent: 300.0 @ 200.0.
	item11 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'A scenery with a couple of slides';
					width: 102.9320220947265) asItem.
	item11 position: 800.6181377980363 @ -2727.238681369358.
	item11 extent: 102.9320220947265 @ 46.0.
	scenery
		storeStringMethodName: 'GtSceneryInspectorStencilExamples>>#compositeSceneryEdited'.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> demoSlidesScenery [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 |
	scenery := GtScenery new.
	item1 := scenery addSceneryItem: GtScenerySlideStencil new asItem.
	item1 position: 52.94487847222206 @ 214.92335340711804.
	item1 extent: 300.0 @ 200.0.
	item2 := scenery
			addSceneryItem: (GtScenerySlideStencil new
					exampleMethodName: 'DemoSlideshow>>#scriptedExampleInPager:') asItem.
	item2 position: 417.21864149305554 @ 313.1988525390625.
	item2 extent: 300.0 @ 200.0.
	item3 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'A scenery with a couple of slides';
					width: 102.9320220947265) asItem.
	item3 position: 417.5630162702583 @ 169.60228135850696.
	item3 extent: 102.9320220947265 @ 46.0.
	scenery
		storeStringMethodName: 'GtSceneryInspectorStencilExamples>>#demoSlidesScenery'.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> embeddedSceneryExampleScenery [
	<gtExample>
	<return: #GtScenery>
	| scenery item1 item2 item3 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtEmbeddedSceneryStencil new
					viewMethodSelector: #gtLiveFor:;
					exampleMethodName: 'GtSceneryEditedExamples>>#sceneryMindmap') asItem.
	item1 position: -277.0 @ -23.0.
	item1 extent: 357.16796875 @ 354.51822916666674.
	item2 := scenery
			addSceneryItem: (GtEmbeddedSceneryStencil new
					viewMethodSelector: #gtLiveFor:;
					exampleMethodName: 'GtSceneryEditedExamples>>#simpleClassDiagram') asItem.
	item2 position: 196.71354166666663 @ -54.59914143880212.
	item2 extent: 362.12890625 @ 348.57096354166674.
	item3 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'A Scenery with two embedded sceneries as examples.';
					width: 183.29335021972656) asItem.
	item3 position: 29.16536458333246 @ -161.4962768554688.
	item3 extent: 183.29335021972656 @ 73.0.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> errorScenery [
	"A scenery with an inspector on an error."

	<gtExample>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryInspectorStencil new target: [ 1 / 0 ]) asItem.
	self should: [ item1 stencil targetValue ] raise: ZeroDivide.
	^ scenery
]

{ #category : #'as yet unclassified' }
GtSceneryInspectorStencilExamples >> foobarStringExample [
	"To be spawned"
	<gtExample>
	^ 'Foobar from the example method: GtSceneryInspectorStencilExamples>>#foobarStringExample'
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> ludoGameScenery [
	"A scenery with a plain inspector of an object."

	<gtExample>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryInspectorStencil new
					target: [ GtLudoRecordingGame new
							roll: 6;
							moveTokenNamed: 'A';
							roll: 2;
							moveTokenNamed: 'A';
							roll: 6;
							moveTokenNamed: 'b';
							roll: 6;
							moveTokenNamed: 'B';
							roll: 4;
							moveTokenNamed: 'B';
							yourself ]) asItem.
	self assert: (item1 stencil targetValue isKindOf: GtLudoRecordingGame).
	^ scenery
]

{ #category : #example }
GtSceneryInspectorStencilExamples >> ludoGameSceneryBoardView [
	<gtExample>
	<return: #GtScenery>
	| scenery ludoItem |
	scenery := self ludoGameScenery.
	ludoItem := scenery items first.
	ludoItem stencil viewMethodSelector: #gtPositionsFor:.
	ludoItem extent: 617.0312500000001 @ 654.5247395833334.
	self assert: ludoItem stencil viewMethodSelector equals: #gtPositionsFor:.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> memoryExampleScenery [
	<gtExample>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryExampleStencil new
					viewMethodSelector: #gtLiveFor:;
					exampleMethodName: 'GtMemoryGameExamples>>#afterSomeMoves') asItem.
	item1 position: -29.446614583333258 @ 180.99833170572919.
	item1 extent: 351.9303385416665 @ 352.1028645833334.
	self assert: item1 stencil viewMethodSelector equals: #gtLiveFor:.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> sceneryWithGtBookPage [
	<gtExample>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryLePageTitleLabelStencil new label: 'Glamorous Toolkit') asItem.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> sceneryWithItemsToSpawnFrom [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 item2 item3 item4 |
	scenery := GtScenery new.
	item1 := scenery
			addSceneryItem: (GtSceneryTextLabelStencil new
					label: 'Foobar';
					width: 72.33174133300781) asItem.
	item1 position: -504.9313964843751 @ -156.83806355794275.
	item1 extent: 72.33174133300781 @ 28.0.
	item2 := scenery
			addSceneryItem: (GtSceneryLePageTitleLabelStencil new
					label: 'Glamorous Toolkit';
					width: 123.4000244140625) asItem.
	item2 position: -501.3129681608241 @ 208.69321695963544.
	item2 extent: 123.4000244140625 @ 28.0.
	item3 := scenery
			addSceneryItem: (GtSceneryPackageInspectorStencil new packageName: #'GToolkit-Scenery') asItem.
	item3 position: -578.4268798828122 @ 469.0881245930989.
	item3 extent: 300.0 @ 400.0.
	item4 := scenery
			addSceneryItem: (GtSceneryUMLClassStencil new
					label: 'ExploringObjectsScenerySlideshow';
					width: 233.93092346191406) asItem.
	item4 position: -558.9581604003911 @ 1167.81564839681.
	item4 extent: 233.93092346191406 @ 28.0.
	scenery
		storeStringMethodName: 'GtSceneryInspectorStencilExamples>>#sceneryWithItemsToSpawnFrom'.
	^ scenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> sceneryWithSpawnedObjects [
	"Check that the spawned objects are of the specialized stencil types.
	Missing: a BlScripter item."

	<gtExample>
	<return: #GtScenery>
	| scenery textLabelItem stringItem bookTitleItem pageItem scripter packageItem sceneryExample sceneryExampleItem slideshowClassItem slide slideItem exampleMethodItem |
	scenery := self sceneryWithItemsToSpawnFrom.
	scripter := BlScripter new element: scenery asElement.
	scripter play.

	textLabelItem := scenery items first.
	self assert: (textLabelItem stencil isKindOf: GtSceneryTextLabelStencil).
	bookTitleItem := scenery items second.
	self assert: (bookTitleItem stencil isKindOf: GtSceneryLePageTitleLabelStencil).
	packageItem := scenery items third.
	self assert: (packageItem stencil isKindOf: GtSceneryPackageInspectorStencil).
	slideshowClassItem := scenery items fourth.
	self assert: (slideshowClassItem stencil isKindOf: GtSceneryUMLClassStencil).

	stringItem := scenery
			spawnNewItemFrom: textLabelItem
			for: textLabelItem stencil label.
	scenery addConnectionFrom: textLabelItem to: stringItem.
	self assert: (stringItem stencil isKindOf: GtSceneryInspectorStencil).

	exampleMethodItem := scenery
			spawnNewItemFrom: stringItem
			for: GtSceneryInspectorStencilExamples >> #foobarStringExample.
	scenery addConnectionFrom: stringItem to: exampleMethodItem.
	self assert: (exampleMethodItem stencil isKindOf: GtSceneryExampleStencil).

	pageItem := scenery
			spawnNewItemFrom: bookTitleItem
			for: bookTitleItem stencil startPage allOutgoingTargets first.
	scenery addConnectionFrom: bookTitleItem to: pageItem.
	self assert: (pageItem stencil isKindOf: GtSceneryLepiterPageStencil).

	sceneryExample := (packageItem stencil package
			gtExamplesWithReturnPragmasClassified at: 'GtScenery') first.
	sceneryExampleItem := scenery spawnNewItemFrom: packageItem for: sceneryExample.
	scenery addConnectionFrom: packageItem to: sceneryExampleItem.
	self assert: (sceneryExampleItem stencil isKindOf: GtEmbeddedSceneryStencil).

	slide := slideshowClassItem stencil asClass new slideMethods first.
	slideItem := scenery spawnNewItemFrom: slideshowClassItem for: slide.
	scenery addConnectionFrom: slideshowClassItem to: slideItem.
	self assert: (slideItem stencil isKindOf: GtScenerySlideStencil).

	scripter play.
	scripter element applyOnceLayoutNamed: #horizontal.
	scripter play.
	^ scripter element gtScenery
]

{ #category : #scenery }
GtSceneryInspectorStencilExamples >> scripterScenery [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	<storedScenery>
	<return: #GtScenery>
	| scenery item1 |
	scenery := GtScenery new.
	item1 := scenery addSceneryItem: GtSceneryScripterStencil new asItem.
	item1 position: 11.643916376014413 @ 297.7526471233315.
	item1 extent: 250.00000000000003 @ 250.0.
	scenery
		storeStringMethodName: 'GtSceneryInspectorStencilExamples>>#scripterScenery'.
	^ scenery
]
